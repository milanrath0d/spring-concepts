server.port=9050

# Spring datasource properties
spring.datasource.url=jdbc:postgresql://localhost:5432/spring_boot_docs
spring.sql.init.data-locations=classpath:schema.sql
spring.sql.init.platform=postgresql
spring.jpa.hibernate.ddl-auto=none

# Spring ai properties
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
spring.ai.vectorstore.pgvector.dimensions=1536
spring.ai.vectorstore.pgvector.max-document-batch-size=10000

# Weather properties
weather.api-key=${WEATHER_API_KEY}
weather.api-url=http://api.weatherapi.com/v1

# Google gemini properties
#spring.ai.openai.chat.base-url=https://generativelanguage.googleapis.com
#spring.ai.openai.chat.completions-path=/v1beta/openai/chat/completions
#spring.ai.openai.api-key=
#spring.ai.openai.chat.options.model=gemini-2.0-flash

spring.docker.compose.file=spring-ai/docker-compose.yml

# Actuator Configuration - Keep it simple with just what's needed
management.endpoints.web.exposure.include=prometheus,health,info

management.prometheus.metrics.export.enabled=true

# Metrics Configuration - Essential settings for good data collection
management.metrics.distribution.percentiles-histogram.all=true
management.metrics.enable.all=true

# Prometheus Configuration
management.prometheus.metrics.export.step=5s

# Micrometer Tracing for exemplars
management.tracing.sampling.probability=1.0
management.tracing.enabled=true